name: build-android

on:
  workflow_call:
    inputs:
      flavor:
        description: 'A flavor name passed from the caller workflow'
        required: true
        type: string
jobs:
  build_android:
    name: Build APK
    needs: [ version ]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Extract version code
        id: extract_version_code
        run: echo "version_code=$(git rev-list --count HEAD)" >> $GITHUB_ENV
      - name: Extract version
        id: extract_version
        run: echo "version=$(echo ${{ github.ref }} | sed -e 's/^refs\/tags\/v//' -e 's/-.*//')" >> $GITHUB_ENV
      - name: Get version.txt
        uses: actions/download-artifact@v3
        with:
          name: gitversion
      - name: Create new file without newline char from version.txt
        run: tr -d '\n' < version.txt > version1.txt
      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: version1.txt
      - name: Update version in YAML
        run: sed -i 's#99.99.99+99#refs/tags/${{ env.version }}+${{ env.version_code }}#g' pubspec.yaml
      - name: Create key.properties file and write secrets to it
        run: |
          echo "storePassword=${{ secrets.PLAYSTORE_STORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.PLAYSTORE_KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=upload" >> android/key.properties
          echo "storeFile=./keystore.jks" >> android/key.properties
      - name: Convert base64 to keystore.jks
        run: echo -n "${{ secrets.PLAYSTORE_KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.15
        with:
          versionSpec: "5.x"
      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.15
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'
      - uses: chkfung/android-version-actions@v1.2.1
        with:
          gradlePath: android/app/build.gradle # or app/build.gradle.kts
          versionCode: ${{ env.version_code }}
          versionName: ${{ env.version }}
      - run: flutter clean
      - run: flutter pub get
      - run: flutter test
      - run: flutter analyze --no-fatal-warnings --no-fatal-infos
      - run: flutter build apk --release --split-per-abi --build-name="${{ env.version }}" --build-number=${{ env.version_code }}
      - run: flutter build appbundle --release --build-name="${{ env.version }}" --build-number=${{ env.version_code }}
      - name: Create a Release in GitHub
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/release/*.apk,build/app/outputs/bundle/release/app-release.aab"
          token: ${{ github.token }}
          commit: ${{ github.sha }}
          allowUpdates: true
      - name: Upload app bundle
        uses: actions/upload-artifact@v3
        with:
          name: appbundle
          path: build/app/outputs/bundle/release/app-release.aab